{"version":3,"file":"bypass.preload.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACU;;;ACtFY;AACa","sources":["webpack://adblockplus/./src/bypass/content/public-api.ts","webpack://adblockplus/./src/bypass/content/index.ts"],"sourcesContent":["const eventQueue = [];\nconst maxErrorThreshold = 30;\nconst maxQueuedEvents = 20;\nconst processingDelay = 100;\nlet errorCount = 0;\nlet processingIntervalId = null;\nasync function getPayload(event) {\n    if (!isTrustedEvent(event)) {\n        return null;\n    }\n    if (!isAuthRequestEvent(event)) {\n        return null;\n    }\n    const payload = (await browser.runtime.sendMessage({\n        type: \"premium.getAuthPayload\",\n        signature: event.detail.signature,\n        timestamp: event.detail.timestamp\n    }));\n    return payload;\n}\nfunction handleFlattrRequestPayloadEvent(event) {\n    if (eventQueue.length >= maxQueuedEvents) {\n        return;\n    }\n    eventQueue.push(event);\n    startProcessingInterval();\n}\nfunction isAuthRequestEvent(event) {\n    return (event.detail &&\n        typeof event.detail.signature === \"string\" &&\n        typeof event.detail.timestamp === \"number\");\n}\nfunction isTrustedEvent(event) {\n    return (Object.getPrototypeOf(event) === CustomEvent.prototype &&\n        !Object.hasOwnProperty.call(event, \"detail\"));\n}\nasync function processNextEvent() {\n    const event = eventQueue.shift();\n    if (event) {\n        try {\n            const payload = await getPayload(event);\n            if (!payload) {\n                throw new Error(\"Premium request rejected\");\n            }\n            let detail = { detail: { payload } };\n            if (typeof cloneInto === \"function\") {\n                detail = cloneInto(detail, document.defaultView);\n            }\n            document.dispatchEvent(new CustomEvent(\"flattr-payload\", detail));\n            stop();\n        }\n        catch (ex) {\n            errorCount += 1;\n            if (errorCount >= maxErrorThreshold) {\n                stop();\n            }\n        }\n    }\n    if (!eventQueue.length) {\n        stopProcessingInterval();\n    }\n}\nfunction startProcessingInterval() {\n    if (processingIntervalId) {\n        return;\n    }\n    void processNextEvent();\n    processingIntervalId = setInterval(() => {\n        void processNextEvent();\n    }, processingDelay);\n}\nfunction stopProcessingInterval() {\n    if (processingIntervalId !== null) {\n        clearInterval(processingIntervalId);\n    }\n    processingIntervalId = null;\n}\nfunction start() {\n    document.addEventListener(\"flattr-request-payload\", handleFlattrRequestPayloadEvent, true);\n}\nfunction stop() {\n    document.removeEventListener(\"flattr-request-payload\", handleFlattrRequestPayloadEvent, true);\n    eventQueue.length = 0;\n    stopProcessingInterval();\n}\nstart();\nexport {};\n","import \"./public-api\";\nexport * from \"./public-api.types\";\n"],"names":[],"sourceRoot":""}